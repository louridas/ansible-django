---
- hosts: servers
  vars_files:
    - vars.yml
  gather_facts: false
  become: yes
  
  tasks:
    - name: clone/pull project repo
      git:
        repo: "{{ project_repo }}"
        dest: "{{ install_root }}/{{ project_name }}"
        accept_hostkey: yes
      notify:
      - restart gunicorn
      
    - name: install python packages
      pip:
        requirements: "{{ install_root }}/{{ project_name }}/requirements.txt"
        executable: pip3
      notify:
      - restart gunicorn

    - name: copy nginx config
      template: src=files/nginx.j2 dest=/etc/nginx/sites-enabled/{{ project_name }}.conf
      notify:
      - restart nginx
 
    - name: django migrate
      django_manage: command=migrate app_path={{ install_root }}/{{ project_name }} pythonpath={{ pythonpath }}

    - name: django collectstatic
      django_manage: command=collectstatic app_path={{ install_root }}/{{ project_name }} pythonpath={{ pythonpath }}

    - name: copy gunicorn config
      template: src=files/{{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: 'gunicorn.service.j2', dest: '/etc/systemd/system/gunicorn.service' }
        - { src: 'gunicorn.socket.j2', dest: '/etc/systemd/system/gunicorn.socket' }
        - { src: 'gunicorn.conf.j2', dest: '/usr/lib/tmpfiles.d/gunicorn.conf' }
      notify:
      - restart gunicorn

    - name: enable ngnix at startup
      service: name=nginx enabled=yes

    - name: enable gunicorn at startup
      service: name=gunicorn enabled=yes

  handlers: 
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart gunicorn
      service: name=gunicorn state=restarted
# vim:ft=ansible:
